import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
import csv
data_strain = []
with open('strains_medians.csv', newline='') as csvfile:
reader = csv.reader(csvfile, delimiter=',', quotechar='|')
for row in reader:
data_strain.append(row)
header = list(np.array(data_strain[0]))
strain_data = np.array(data_strain)[1:,0]
strain_types = np.unique(strain_data)
dataSS = np.array(data_strain)[1:,2:].astype(float)
stage_data = np.array(data_strain)[1:,1]
stage_types = np.unique(stage_data)
iterations = 3
fit_TOFs_boot = np.empty((4,3,iterations,100))
fit_nEXTs_boot = np.empty((4,3,iterations,100))
regtime_s = np.empty((4,3,100))
for t in range(len(strain_types)):
for s in range(3):
boot_all_data = dataSS[np.logical_and(strain_data == strain_types[t], stage_data == stage_types[s])]
boot_tof = boot_all_data[:,1]
boot_next = boot_all_data[:,2]
boot_time = boot_all_data[:,0]
hourmin = np.min(boot_time)
hourmax = np.max(boot_time)
regtime_s[t,s] = np.linspace(hourmin,hourmax,100)
numbersamples = len(boot_tof)
for i in range(iterations):
count = np.arange(numbersamples)
pick = np.random.choice(count,numbersamples,replace = True)
subset_tof = boot_tof[pick]
subset_next = boot_next[pick]
subset_time = boot_time[pick]
fit_TOFs_boot[t,s,i] = r.lokerns(subset_time, subset_tof,0,100,regtime_s[t,s],2,True)[3]
print('Finished with strain: '+strain_types[t])
lfit = TOF_length(fit_TOFs_boot)
wfit = nEXT_width(fit_nEXTs_boot)
fit_dl_boot = np.empty((4,3,iterations,100))
fit_dw_boot = np.empty((4,3,iterations,100))
mean_dw = np.empty((4,3,100))
mean_dl = np.empty((4,3,100))
for r in range(4):
for s in range(3):
fit_dl_boot[r,s] = np.gradient(lfit[r,s],regtime_s[r,s],axis = 1)
fit_dw_boot[r,s] = np.gradient(wfit[r,s],regtime_s[r,s],axis = 1)
mean_dl[r,s] = np.gradient(np.mean(lfit[r,s],axis = 0),regtime_s[r,s])
mean_dw[r,s] = np.gradient(np.mean(wfit[r,s],axis = 0),regtime_s[r,s])
LWcov = np.empty((2,2,4,3,100))
for r in range(4):
for s in range(3):
for t in range(100):
l = fit_dl_boot[r,s,:,t]
w = fit_dw_boot[r,s,:,t]
lw = np.array([l,w])
LWcov[:,:,r,s,t] = np.cov(lw)
error = np.sqrt(np.divide(LWcov[1,1],np.square(mean_dl))+
np.divide(np.square(mean_dw)*LWcov[0,0],np.power(mean_dl,4))-
np.divide(2*mean_dw*LWcov[0,1],np.power(mean_dl,3)))
library(readr)
sasha <- read_csv("~/Dropbox/AndersenLab/LabFolders/Joy/Growth_mutants/sasha.csv")
View(sasha)
